C2.4 : Starting a Thread with a Function Object
Functions and Callable Objects
In the previous section, we have created our first thread by passing it a function to execute. 
We did not discuss this concept in depth at the time, but in this section we will focus on the 
details of passing functions to other functions, which is one form of a callable object.

In C++, callable objects are object that can appear as the left-hand operand of the call operator. 
These can be pointers to functions, objects of a class that defines an overloaded function call 
operator and lambdas (an anonymous inline function), with which function objects can be created 
in a very simple way. In the context of concurrency, we can use callable objects to attach a 
function to a thread.

In the last section, we constructed a thread object by passing a function to it without any arguments. 
If we were limited to this approach, the only way to make data available from within the thread function 
would be to use global variables - which is definitely not recommendable and also incredibly messy.